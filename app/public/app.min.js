(function() {
  'use strict';

  var app = angular.module('myApp', [
    'ui.router',
    'firebase',
    'ngMaterial',
    'ngAnimate',
    'ngAria',

    // Add app-specific directives here
    'notifications',
    'auth',
    'child'
  ]).config(function($mdThemingProvider, $locationProvider) {
    $mdThemingProvider.theme('default')
      .primaryPalette('blue')
      .accentPalette('pink');
  });

  app.config(function($stateProvider, $urlRouterProvider) {
    $stateProvider.state('loginState', {
      url: "/auth/login",
      templateUrl: "/views/login.ejs"
    });

    $stateProvider.state('homeState', {
      url: "/dash",
      templateUrl: "/views/home.ejs"
    });

    $stateProvider.state('detailState', {
      url: "/app/chores/{id}",
      templateUrl: "/views/choreDetail.ejs",
      controller: function($stateParams) {
        // $(document).ready(function() {
        console.log(localStorage.getItem('color'));
        // });
      }
    });

    $stateProvider.state('appState', {
      url: "/app",
      templateUrl: "/views/app.ejs"
    });

    $urlRouterProvider.otherwise('/auth/login');
  });
})();

(function() {
  'use strict';

  angular
    .module('auth', [
      'auth.google',
      'auth.facebook'
    ])
})();

(function() {
  'use strict';

  angular
    .module('child', [
      'child.chore',
    ])
})();

(function() {
  angular
    .module('notifications', [])
})();

(function() {
  'use strict';

  angular
    .module('auth.facebook', [])
})();
(function() {
  'use strict';

  angular
    .module('auth.google', [])
})();

(function() {
  angular
    .module('child.chore', [])
})();

(function() {
  angular
    .module('notifications')
    .directive('spNotifications', function() {
      return {
        bindToController: true,
        controller: NotificationsController,
        controllerAs: 'vm',
        templateUrl: './javascripts/notifications/notifications.html'
      };
    });

  NotificationsController.$inject = [
    '$attrs',
    '$timeout',
    '$scope',
    '$state'
  ];

  function NotificationsController($attrs, $timeout, $scope, $state) {
    // This needs to be done with a constant
    var ref = new Firebase('https://cranium.firebaseio.com/');
    var vm = this;
  }
})();

(function() {
  'use strict';

  angular
    .module('auth.facebook')
    .directive('spFacebook', function() {
      return {
        bindToController: true,
        controller: FacebookController,
        controllerAs: 'vm',
        templateUrl: './javascripts/auth/facebook/auth.facebook.html'
      };
    });

  FacebookController.$inject = [
    '$attrs',
    '$timeout',
    '$scope',
    '$state',
    '$mdToast'
  ]

  function FacebookController($attrs, $timeout, $scope, $state, $mdToast) {
    var ref = new Firebase('https://cranium.firebaseio.com/');

    var vm = this;
    vm.facebook = {};
    vm.facebook.login = login;
    vm.facebook.logout = logout;
    vm.authed = false;

    function login() {
      ref.authWithOAuthPopup("facebook", function() {
        $mdToast.show($mdToast.simple().content(
          'Successfully logged in'));
      });
    }

    function logout() {
      ref.unauth();
      vm.authed = false;
    }

    function onAuthCallback(authData) {
      if (authData) {
        $timeout(function() {
          vm.user = authData;
          vm.authed = true;
        })
      }
    }
    ref.onAuth(onAuthCallback);
  }
})();

(function() {
  'use strict';

  angular
    .module('auth.google')
    .directive('spGoogle', function() {
      return {
        bindToController: true,
        controller: GoogleController,
        controllerAs: 'vm',
        templateUrl: './javascripts/auth/google/auth.google.html'
      };
    });

  GoogleController.$inject = [
    '$attrs',
    '$timeout',
    '$scope',
    '$state',
    '$mdToast'
  ];

  function GoogleController($attrs, $timeout, $scope, $state, $mdToast) {
    // This needs to be done with a constant
    var ref = new Firebase('https://cranium.firebaseio.com/');

    var vm = this;
    vm.google = {};
    vm.google.login = login;
    vm.google.logout = logout;
    vm.authed = false;

    function login() {
      ref.authWithOAuthPopup("google", function(err) {
        if (!err) {
          $mdToast.show($mdToast.simple().content(
            'Successfully logged in'));
          $state.go('homeState');
        }
      });
    }

    function logout() {
      ref.unauth();
      vm.authed = false;
      $state.go('loginState');
    }

    function onAuthCallback(authData) {
      if (authData) {
        $timeout(function() {
          vm.user = authData;
          vm.authed = true;
        })
      }
    }

    ref.onAuth(onAuthCallback);
  }
})();

(function() {
  angular
    .module('child.chore')
    .directive('scChore', function() {
      return {
        bindToController: true,
        controller: ChoreController,
        controllerAs: 'chore',
        templateUrl: './javascripts/child/chore/child.chore.html'
      };
    });

  ChoreController.$inject = [
    '$attrs',
    '$timeout',
    '$scope',
    '$state'
  ];

  function ChoreController($attrs, $timeout, $scope, $state) {
    // This needs to be done with a constant
    var ref = new Firebase('https://cranium.firebaseio.com/');
    var chore = this;
    chore.id = $attrs.id;

    var colors = [
      '#B2DFDB',
      '#BBDEFB',
      '#F8BBD0',
      '#B2EBF2',
      '#F0F4C3',
      '#C8E6C9',
      '#E1BEE7',
      'FFCCBC'
    ];

    $(document).ready(function() {
      $.map($('.chore'), function(i) {
        $(i).height($(i).width());
        var color = colors[Math.floor(Math.random() *
          colors.length)];
        $(i).css('background-color', color);
        localStorage.setItem('color', color);
      });
    });
  }
})();
